Half of this is out of date but the main components/ideas are still pretty relevant.


Left to do:
*UBloc/GPS wiring
*EByte wiring (Need to wait for module/PCB) [Someone smuggled contraband and now my PCBs are lost. Just gonna solder right onto it and order more later]
*Test everything put together with breadboards, update the schematic as needed
*Take it all apart and assemble it again according to the schematic
*Rearrange wiring, copper ground plane (Trace width for 700mA?)(decoupling capacitors?)
*Finalize parts list (e.g. what footprint do we want for the capacitors, etc.)
*Order parts/PCB


SX1262 (22Dbi gain)				- Using the EBYTE 900M30S module (gets it up to ~30Dbi, 31Dbi MAX at 650mA draw)
Antenna?					- Can we use the same 10Db one on both ends, or a specially made high-gain one for GS?
Ublox GPS?					- Lets go with a whole GPS module
MOSFET (for GPS enable/disable to save power)?	- Nah, if its removed it wont initialize in the first place (timeout)



https://www.digi.com/products/embedded-systems/digi-xbee/rf-modules/sub-1-ghz-modules/xbee-pro-900hp
Apparently this module can reach up to 28 miles (~45Km)?

Hey they had the same idea:
https://www.reddit.com/r/electronics/comments/937rkl/gnss_lora_high_altitude_balloon_tracker_im/
*Add SD card module for data logging?


Can we still do it on just 5V? Whats the current draw like with the new module?
Might make more sense to power it separately, and then connect via USB for data (can connect the grounds)

12V input, converter to 5V for module/board?

Basically, just put decoupling capacitors everywhere on the edges of your system,
e.g. Right against input pins to modules, against pins exposed from protoboard for attaching, etc.


When the rest of the circuit is done, create a large pin header that exposes those and any extra unused pins on the ATMEGA. Might as well, can use them in future

Full arduino:
*Schematic: http://electronoobs.com/eng_arduino_tut31_sch3.php
*Parts: http://electronoobs.com/eng_arduino_tut31_parts1.php

??????????
Why can't we find the UBlox NEO 6M modules for cheap?? A full serial GPS module costs less than one (And it already has one mounted)?
Can either take the parts off and solder onto our board, or just attach the whole module via pins lmao

"RF transmitters, in particular: no ground plane near the 'PCB antennas' often used for RFID"
Avoid ground planes near the transmitter on the PCB?

Perhaps allow the Mini-USB connection to have the 5V line to be powered by a laptop, but attach a 0.5-1A fuse on it to protect
whatever is attached (+ diode).

Says to avoid high-frequency analog traces, and POWER TRACES, must be avoided under the module.

Reccomends adding a 200R resistor to the Rxd and Txd of the ATMEGA pins?

I missed this, but the SPI pins operate at 3.3V like the other module. Either run ATMEGA at 3.3V with an 8MHz crystal and wire directly,
or run the ATMEGA at 5V with a 16MHz crystal and logic-level shift the SPI pins between 5V and 3.3V.


AskElectronics: Is there any reason to run the ATMEGA at 5V instead of 3.3V?
Also, if we do 5V, we need a second regulator. So first regulating 12V to 5V, should we also regulate 12V to 3.3V or 5V to 3.3V?
E.g. the placement of the regulator in the circuit. I would imagine regulate the 12V source as well.
->I think if theres a reason to use 5V, just throw in a logic-level adapter

---------------------------------------------------------------------------------
	PARTS - I think we can find basically all of this on Digikey
---------------------------------------------------------------------------------

Add a temperature sensor and anything else relevant. Might as well use up some of those extra pins.
Also use a pin that when set high/low signals if we're trying to transmit, or trying to query/set config.
(Beware we probably cant receive packets in that mode? Probably fine though since its either initialization or temp checks)
Better way to do temp checks though?

Using 12V power input,

POWER {
	*1x DC DC CONVERTER 5V 5W (Converts the input 12V down to 5V for the Arduino and Transmitter to use)
		-https://www.digikey.com/product-detail/en/recom-power/R-78C5-0-1-0/945-1395-5-ND/2652148
		-https://recom-power.com/pdf/Innoline/R-78C-1.0.pdf
		-Page 3 of the data sheet, follow EN55032 Class A to reduce EMI effect on receiver (will the given components work for the 5.0 part? They are for the 3.3)	
	*1x 10uF 100V (Does it need to be that high?) Capacitor
	^*1x 5.6uH choke (Inductor)
		-https://recom-power.com/pdf/Accessories/RLS-567.pdf
	*1x Barrel adapter
}

COMMS & GPS {
	*1x EBYTE SX1262 900M30S (SPI)
		-Up to 700mA during transmission
	*1x LoRa antenna (Choose the most high gain we can get? 915MHz exactly for max performance. Connect via SMA?)
	*1x UBlox GPS module (SPI)
	*1x GPS antenna (Connect via SMA?)
	*2x Female SMA connectors (Safest, no need for the [SMB??] prong the middle, unless we want it to connect directly to an antenna with no adapter. Cables should have the prong)
}

OBC {
	*1x ATMEGA328P-AU (AU is package type, can use PU for prototyping on breadboard)
		-About ~17mA draw, but assume higher due to components (go 50 base for this for large safety margin, then add components on top).
		-Max 40mA draw per IO pin
		-Max 200mA draw on Vcc/Gnd pins
	^*1x 16MHz oscillator (Required for 5V operation at 16MHz. 16MHz probably makes comms work nicer...)
	*2x 220pF capacitors
	*1x 10Kohm resistor
	*1x Tactile push button (reset the MCU)
	*1x Micro USB (Type B or whatever?) (+5V LINE NOT CONNECTED, ONLY GND, TX, RX. Must be powered externally with 12V)
	*1x 6-pin header (SPI programming)
	^*1x CH430G (Wire ATMEGA clock to drive it. Use to program via USB)
	^*1x Mini-USB female connector (To interface via serial/program with)

	^*1x 1N4007 M7 diode (used with 10K connection of reset to +5V)
}

MISC {
	*4x 0.1uF capacitors (decoupling caps)
}